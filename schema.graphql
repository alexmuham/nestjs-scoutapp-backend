# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CareerProgressions {
  id: String!
  progress: String!
}

type Ranking {
  id: String!
  top: String!
  percentile: String!
  average: String!
}

type PercentileRankings {
  id: String!
  FB: Ranking
  C: Ranking
  oneB: Ranking
  tenSPL: Ranking
  sixty: Ranking
  IF: Ranking
  pop: Ranking
}

type PGEventResults {
  id: String!
  fastballVelocity: String
  tenYdSplit: String
  infieldVelocity: String
  exitVelocity: String
  sixtyYdDash: String
}

type Player {
  id: ID!
  name: String!
  externalId: String!
  height: String!
  weight: String!
  bats: String!
  throws: String!
  graduatingClass: String!
  primaryPosition: String!
  highSchool: String!
  contactPhone: String!
  highSchoolContactPhone: String!
  statePositionRanking: String!
  stateOverallRanking: String!
  nationalPositionRanking: String!
  nationalOverallRanking: String!
  collegeCommitment: String!
  careerProgressions: CareerProgressions
  percentileRankings: PercentileRankings
  pGEventResults: PGEventResults
  images: [String!]!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  preferencesId: String!
  phoneNumber: String!
  education: String!
  players: [Player!]
  image: String
}

type Preferences {
  id: String!
  enableFriendRequestNotification: Boolean!
  enablePlayerMatchingNotification: Boolean!
  enableMessageNotification: Boolean!
  sendNotificationsToEmail: Boolean!
  players: [String!]!
}

type Account {
  user: User!
  preferences: Preferences!
}

type Query {
  account: Account!
  friends: [User!]!
  friendById(friendId: String!): User!
  playerById(playerId: String!): Player!
  getPlayers: [Player!]!
  playersFromUser: [Player!]!
  playersBySearchParameters(exitVelocity: [Float!]!, tenYard: [Float!]!, positionVelocity: String, sixtyTime: [Float!]!, playerThrows: String, bat: String, commitment: String, graduatingClass: [Float!]!, position: [String!], weight: [Float!]!, height: [Float!]!, name: String): [Player!]!
  preferences: Preferences!
}

type Mutation {
  addFriend(friendId: String!): Boolean!
  deleteFriend(friendId: String!): Boolean!
  addPlayerToUser(playerId: String!): Boolean!
  deletePlayersToUser(playersIds: [String!]!): Boolean!
  deletePlayerToUser(playerId: String!): Boolean!
  addPlayerImage(playerId: String!, imageId: String!): Boolean!
  updatePreferences(sendNotificationsToEmail: Boolean, enableMessageNotification: Boolean, enablePlayerMatchingNotification: Boolean, enableFriendRequestNotification: Boolean): Preferences!
  addGeneralReports(playerId: String!, videosIds: [String!], notes: String!, date: DateTime!): Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime
